#include <string.h>
#include <stdio.h>

#define NULL 0

void UIntToHexStr (unsigned int uiValue, char pcStr[]) {
	unsigned char ucNibbleCounter;
	unsigned char ucCurrentNibble;
	
	pcStr[0]='0';
	pcStr[1]='x';
	pcStr[6]=NULL;
	
	for(ucNibbleCounter=0; ucNibbleCounter<4; ucNibbleCounter++) {
		
		ucCurrentNibble=(uiValue >> (ucNibbleCounter*4))&0x0F;
		
		if(ucCurrentNibble<10){
			pcStr[5-ucNibbleCounter] = '0' + ucCurrentNibble;
		}
		else 
			pcStr[5-ucNibbleCounter] = 'A' + (ucCurrentNibble-10); 
	}
}

enum Result {OK, ERROR};

enum Result eHexStringToUInt (char pcStr[], unsigned int *puiValue) {
	
	unsigned char ucCharacterCounter;
	unsigned char ucCurrentCharacter;
	
	*puiValue=0;
	
	if((pcStr[0]!='0') || (pcStr[1]!='x' || pcStr[2]==NULL)){
		return ERROR;
	}
	for(ucCharacterCounter=2; pcStr[ucCharacterCounter] != NULL; ucCharacterCounter++) {
		
		if(ucCharacterCounter==6){
			return ERROR;
		}
		ucCurrentCharacter = pcStr[ucCharacterCounter];
		*puiValue = *puiValue<<4;
		
		if(ucCurrentCharacter <= '9' & ucCurrentCharacter >= '0'){
			*puiValue= *puiValue | (ucCurrentCharacter - '0');
		}
		else if(ucCurrentCharacter>='A' && ucCurrentCharacter<='F'){
			*puiValue = *puiValue | (ucCurrentCharacter - 'A' + 10);
		}
		else {
		return ERROR;
		}
	}
  return OK;
}


void AppendUIntToString (unsigned int uiValue, char pcDestinationStr[]) {
	unsigned char ucCharacterCounter;
	
	for(ucCharacterCounter=0; pcDestinationStr[ucCharacterCounter]!=NULL; ucCharacterCounter++){}
	UIntToHexStr(uiValue, &pcDestinationStr[ucCharacterCounter]);
}



char pcHexToUIntAccordingToFormat[6] = "0x3E8";
char pcHexToUIntNULLAfterX[3] ="0x";
char pcHexToUIntTooLongHex[7] = "0x2342A";
char pcToUIntNotAccordingTo0xFormat[2] = "0";

unsigned int *puiValueAccordingToFormat;
unsigned int *puiValueNULLAfterX;
unsigned int *puiValueTooLongHex;
unsigned int *puiValueNotAccordingTo0xFormat;

enum ResultAccordingToFormat {OK1, ERROR1};
enum ResultNULLAfterX {OK2, ERROR2};
enum ResultTooLongHex {OK3, ERROR3};
enum ResultNotAccordingTo0xFormat {OK4, ERROR4};
 char Klaudia[6] = " ";

int main(void) {
	enum Result Result;
	//enum Result Result;
	//enum Result Result;
//	enum Result Result; 
;
	
  Result = eHexStringToUInt(pcHexToUIntAccordingToFormat, puiValueAccordingToFormat);
  if( Result ==0){
		
	}
	else{

	}
	
	
	Result = eHexStringToUInt(pcHexToUIntNULLAfterX, puiValueNULLAfterX);
  if( Result ==0){
		return OK2;
	}
	else{
		return ERROR2;
	}
	Result = eHexStringToUInt(pcHexToUIntTooLongHex, puiValueTooLongHex);
	Result = eHexStringToUInt(pcToUIntNotAccordingTo0xFormat, puiValueNotAccordingTo0xFormat);
	
}
